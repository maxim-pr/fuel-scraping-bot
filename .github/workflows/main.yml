name: CI/CD main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME:     "fuel-scraping-bot"
  CONTAINER_NAME: "fuel-scraping-bot"

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    
    - name: Checkout main
      uses: actions/checkout@v2
    
    - name: Copy config file
      run: echo ${{ secrets.CONFIG }} > parsers/config/config.yml

    - name: Build the Docker image
      run: docker build -t ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
    
    - name: Login to DockerHub
      uses: docker/login-action@v1.14.1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
    - name: Push image
      run: |
        docker push ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker tag ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
  
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    
    - name: Deploy container to the server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host:     ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key:      ${{ secrets.SSH_KEY }}
        script_stop: |
          # Stop running container
          docker ps | grep ${{ env.CONTAINER_NAME }} && docker stop ${{ env.CONTAINER_NAME }}
          # Remove old container
          docker ps -a | grep ${{ env.CONTAINER_NAME }} && docker rm ${{ env.CONTAINER_NAME }}
          # Run container from the new image
          docker run \
            -e FPB_BOT_TOKEN      = ${{ secrets.BOT_TOKEN }}      \
            -e FPB_BOT_ADMIN      = ${{ secrets.BOT_ADMIN }}      \
            -e FPB_REDIS_IP       = ${{ secrets.REDIS_IP }}       \
            -e FPB_REDIS_PORT     = ${{ secrets.REDIS_PORT }}     \
            -e FPB_REDIS_PASSWORD = ${{ secrets.REDIS_PASSWORD }} \
            -e FPB_REDIS_DB       = ${{ secrets.REDIS_DB }}       \
            --network ${{ secrets.NETWORK_NAME }} \
            --restart always \
            -dti \
            --name ${{ env.CONTAINER_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
